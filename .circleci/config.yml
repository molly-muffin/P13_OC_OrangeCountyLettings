version: 2.1

jobs:
  build_and_test:
    docker:
      - image: cimg/python:3.11.4
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            cd Python-OC-Lettings-FR-master
            pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            cd Python-OC-Lettings-FR-master
            flake8 --max-line-length 105
            python manage.py test home 
            python manage.py test lettings 
            python manage.py test profiles 

  build_and_push_docker_image:
      docker:
        - image: cimg/python:3.11.4
      steps:
        - checkout
        - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
        - run:
            name: Containerize on Docker
            command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_LOGIN --password-stdin
            docker build -t oc_lettings .
            docker tag oc_lettings $DOCKER_LOGIN/$DOCKER_REPO:$CIRCLE_SHA1
            docker push $DOCKER_LOGIN/$DOCKER_REPO:$CIRCLE_SHA1est  
    
  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Deploy on Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a ${HEROKU_APP_NAME} web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a ${HEROKU_APP_NAME} web


workflows:
  tests:
    jobs:
      - build_and_test:
          filters:
            branches:
              only:
                master
  contenerize_and_deploy:
     jobs:
      - build_and_test:
          filters:
            branches:
              only: master
      - build_and_push_docker_image:
          requires:
            - build_and_test 
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_and_test
            - build_and_push_docker_image
          filters:
            branches:
              only: master
